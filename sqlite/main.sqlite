select
  *
from artists
where artist like '%klee%'
limit 10
;



SELECT name, '"' || sql || '"' as sql
FROM sqlite_master
WHERE type = 'table'
AND name NOT LIKE 'sqlite_%';

-- IMDB,"CREATE TABLE IMDB (Movie_id Text, Title Text, Rating DECIMAL, TotalVotes INTEGER, MetaCritic DECIMAL, Budget DOUBLE, Runtime Text, CVotes10 Text, CVotes09 Text, CVotes08 Text, CVotes07 Text, CVotes06 Text, CVotes05 Text, CVotes04 Text, CVotes03 Text, CVotes02 Text, CVotes01 Text, CVotesMale Text, CVotesFemale Text, CVotesU18 Text, CVotesU18M Text, CVotesU18F Text, CVotes1829 Text, CVotes1829M Text, CVotes1829F Text, CVotes3044 Text, CVotes3044M Text, CVotes3044F Text, CVotes45A Text, CVotes45AM Text, CVotes45AF Text, CVotes1000 Text, CVotesUS Text, CVotesnUS Text, VotesM Text, VotesF Text, VotesU18 Text, VotesU18M Text, VotesU18F Text, Votes1829 Text, Votes1829M Text, Votes1829F Text, Votes3044 Text, Votes3044M Text, Votes3044F Text, Votes45A Text, Votes45AM Text, Votes45AF Text, VotesIMDB Text, Votes1000 Text, VotesUS Text, VotesnUS Text)"


SELECT DISTINCT
  t1.title,
  CASE
    WHEN (UPPER(t1.title) = 'ADMIN') THEN 'ADMIN'
    WHEN (upper(substr(t1.title, 1, 1)) || substr(t1.title, 2) = 'First capital' OR LOWER(t1.title) = 'bob') THEN 'REGULAR'
    ELSE 'DEFAULT_VALUE'
  END AS name,
  COALESCE(NULL, 'new_value', 'COALESCE selects the first non null value') AS value,
  t1.Movie_id AS table2_id,
  randomblob(16) AS id
FROM IMDB AS t1
WHERE
  t1.Movie_id NOT IN (select 1)
  AND t1.title != 'account'
  AND JSON_UNQUOTE(JSON_EXTRACT(t1.json_data, '$.old_value')) != 'junk'
  AND DATE('2024-12-02') > DATE('2024-12-01', '-7 days') -- this is the date format sqlite wants be default. be careful with other formats. strftime() should help with others
  AND CAST('101' AS INTEGER) > 100
;

WITH actionable_rows AS (
  SELECT IIF(DATE('2024-12-02') > DATE('2024-12-01', '-7 days'), 'ya', 'nah') as t, strftime('%Y-%m-%d', '12/02/24') as z
)
SELECT * FROM actionable_rows;






WITH actionable_rows AS (
  SELECT DISTINCT
    CASE
      WHEN (UPPER(t2.name) = 'ADMIN' OR REGEXP_REPLACE('We keep this stuff -delete everthing after the first occurence of "-"-also this stuff is deleted', '[|-][^|-]*$', '') = 'We keep this stuff -') THEN 'ADMIN'
      WHEN (INITCAP(t2.name) = 'Title Case' OR LOWER(t2.name) = 'bob') THEN 'REGULAR'
      ELSE 'DEFAULT_VALUE'
    END AS name,
    COALESCE(NULL, 'new_value', 'COALESCE selects the first non null value') AS value,
    t2.id AS table2_id,
    randomblob(16) AS id
  FROM table2 AS t2
  WHERE t2.id NOT IN (
    SELECT DISTINCT
      t1.id
    FROM table1 AS t1
    WHERE
      t1.type = 'account'
      AND t1.json_data ->> 'old_value' != 'junk'
      AND t1.created_date > DATE('12/01/23', '-7 days')
      AND t1.name IN ('Bob', 'Ross')
      AND CAST(t1.int_string AS INTEGER) > 100
  )
)
SELECT * FROM actionable_rows;


select IIF(1, 2, 3)

CREATE TABLE Ps (
  i int
);

select * from Ps


INSERT INTO Ps (i)
  WITH actionable_rows AS (
    SELECT 1 AS i
  )
select i from actionable_rows

WITH actionable_rows AS (
  SELECT 1 AS i
)
delete from Ps
where
i in (select i from actionable_rows)


WITH actionable_rows AS (
  SELECT 1 AS i, 'yo' AS z
)
update Ps as ps1, actionable_rows as ar 
SET ps1.i = ar.i + 1,
    ps1.b = ar.z || ps1.b
where ps1.i = ar.i


WITH actionable_rows AS (
  SELECT 1 AS i, 'yo' AS z
)
UPDATE Ps
SET i = i + (SELECT i FROM actionable_rows)
WHERE i IN (SELECT i FROM actionable_rows);

